spring.application.name=Tagger
server.port=8080

## OpenAI
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.base-url=${OPENAI_API_BASE_URL}
spring.ai.openai.chat.options.model=${OPENAI_API_MODEL}

## Database
spring.datasource.url=${POSTGRES_URL}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.jpa.show-sql=false
spring.sql.init.mode=never
spring.jpa.hibernate.ddl-auto=validate

spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.url=${POSTGRES_URL}
spring.flyway.user=${POSTGRES_USER}
spring.flyway.password=${POSTGRES_PASSWORD}

## Auth
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${SPRING_APP_BASE_URL}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=email,profile

# VARIABLES
ai.system.context=You are an AI assistant helping online sellers create attractive product listings.\
  \ Your tasks: generate relevant tags (starting with #, no spaces), catchy titles, and detailed product descriptions based on the provided information.\
  \ Respond concisely, professionally, and according to best online sales practices.\
  \ Use modern, trendy, and engaging language as used on popular online platforms and social media.\
  \ If any input is missing or null, simply ignore that section.\
  \ For electronic items (e.g., phone, laptop, TV, dishwasher): if specifications are not provided but you know typical specs for the model, include them in your response. \
  \ Be aware of adding specs if there are many variations of item. \
  \ Adjust your response to the selling platform provided by user. It is very important to match the target audience. \
  \ Always return only pure JSON, without markdown or backticks.